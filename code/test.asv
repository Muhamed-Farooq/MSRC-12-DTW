function [realGestures, detectedGestures, errorMap, errorMapWithBacktracking] = test(model, X, Y)
    realGestures = sum(Y(:, model.gesture));
    errorMap = dtw(model.sequence, X, 'find');
    
    % We recognize a gesture when the following conditions are met:
    % - The error value at the last row of the error map is lower than the
    %   optimal threshold
    % - The error value at the last row of the error map is a local minima.
    % - The backtracking path does not joint to another backtracking path
    %   of another recognized gesture.
    
    [valleys, valleyIndices] = find_peaks(errorMap(end, :) * -1);
    errorMapWithBacktracking = errorMap;
    
    for valleyIndex = valleyIndices
        if valleyIndex == 2
            continue;           % The algorithm to detect valleys can consider the 2nd column as a walley, because the 1st column i
        end
        
        if errorMap(end, valleyIndex) > model.threshold
            continue;
        end
        
        buffer = zeros(size(errorMap));
        
        i = size(errorMap, 1);
        j = valleyIndex;
        buffer(i, j) = -inf;
        
        while i > 1
            chosenI = i;
            chosenJ = j - 1;
            
            if errorMap(i - 1, j) <= errorMap(chosenI, chosenJ)
                chosenI = i - 1;
                chosenJ = j;
            end
            
            if errorMap(i - 1, j - 1) <= errorMap(chosenI, chosenJ)
                chosenI = i - 1;
                chosenJ = j - 1;
            end
            
            i = chosenI;
            j = chosenJ;
            
            if errorMapWithBacktracking(chosenI, chosenJ) == -inf
                break;
            end
            
            buffer(i, j) = -inf;
        end
        
        if i == 1
            errorMapWithBacktracking = errorMapWithBacktracking + buffer;
        end
    end
    
    detectedGestures = sum(errorMapWithBacktracking(end, 2:end) == -inf);
end
